name: C/C++ CI

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Install Eigen3 and MPI
      shell: bash
      run: sudo apt install -y libmpich-dev libeigen3-dev
    - name: Install oneMKL library
      shell: bash
      run: |
        wget https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
        sudo apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
        rm GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
        sudo add-apt-repository "deb https://apt.repos.intel.com/oneapi all main"
        sudo apt update
        sudo apt install intel-oneapi-mkl-devel
      working-directory: /tmp
    - name: Configure
      shell: bash
      run: |
        source /opt/intel/oneapi/mkl/latest/env/vars.sh
        source /opt/intel/oneapi/compiler/latest/env/vars.sh
        mkdir build
        cmake -B build -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Release .
    - name: Build
      shell: bash
      run: |
        source /opt/intel/oneapi/mkl/latest/env/vars.sh
        source /opt/intel/oneapi/compiler/latest/env/vars.sh
        cmake --build build --config Release
    - name: Run unit tests
      shell: bash
      run: |
        source /opt/intel/oneapi/mkl/latest/env/vars.sh
        source /opt/intel/oneapi/compiler/latest/env/vars.sh
        cd build
        ctest -V

  build_openmp:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Install Eigen3
      shell: bash
      run: sudo apt install -y libeigen3-dev
    - name: Install oneAPI toolkit
      shell: bash
      run: |
        wget https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
        sudo apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
        rm GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
        sudo add-apt-repository "deb https://apt.repos.intel.com/oneapi all main"
        sudo apt update
        sudo apt install intel-oneapi-compiler-dpcpp-cpp-and-cpp-classic intel-oneapi-mpi intel-oneapi-mpi-devel intel-oneapi-openmp intel-oneapi-mkl-devel
      working-directory: /tmp
    - name: Configure
      shell: bash
      run: |
        source /opt/intel/oneapi/setvars.sh
        mkdir build_openmp
        cmake -B build_openmp -G "Unix Makefiles" -DCMAKE_CXX_COMPILER=icpx -DCMAKE_C_COMPILER=icx -DCMAKE_BUILD_TYPE=Release -DENABLE_OPENMP=on .
    - name: Build
      shell: bash
      run: |
        source /opt/intel/oneapi/setvars.sh
        cmake --build build_openmp --config Release
    - name: Run unit tests
      shell: bash
      run: |
        set -X
        source /opt/intel/oneapi/setvars.sh
        cd build_openmp
        ctest --extra-verbose --output-on-failure --force-new-ctest-process --repeat until-pass:2