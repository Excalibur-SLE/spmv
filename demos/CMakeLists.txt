# Executables
add_executable(cg_demo cg.cpp)
target_link_libraries(cg_demo LINK_PUBLIC ${PROJECT_NAME})
add_executable(spmv_demo spmv.cpp CreateA.cpp)
target_link_libraries(spmv_demo ${PROJECT_NAME})
add_executable(restrictmain restrictmain.cpp)
target_link_libraries(restrictmain ${PROJECT_NAME})

if(USE_DPCPP OR USE_HIPSYCL)
  add_executable(spmv_demo_sycl spmv_sycl.cpp CreateA.cpp)
  target_link_libraries(spmv_demo_sycl LINK_PUBLIC ${PROJECT_NAME})
  add_executable(cg_demo_sycl cg_sycl.cpp)
  target_link_libraries(cg_demo_sycl LINK_PUBLIC ${PROJECT_NAME})
  if(USE_HIPSYCL)
    add_sycl_to_target(TARGET spmv_demo_sycl SOURCES spmv_sycl.cpp)
    add_sycl_to_target(TARGET cg_demo_sycl SOURCES cg_sycl.cpp)
  endif()
elseif(USE_OPENMP_OFFLOAD)
  add_executable(spmv_demo_openmp_offload spmv_openmp_offload.cpp CreateA.cpp)
  target_link_libraries(spmv_demo_openmp_offload LINK_PUBLIC ${PROJECT_NAME})
elseif(USE_CUDA)
  add_executable(spmv_demo_cuda spmv_cuda.cpp CreateA.cpp)
  target_link_libraries(spmv_demo_cuda LINK_PUBLIC ${PROJECT_NAME})
  target_link_libraries(spmv_demo_cuda PRIVATE CUDA::cublas)
  add_executable(cg_demo_cuda cg_cuda.cpp)
  target_link_libraries(cg_demo_cuda LINK_PUBLIC ${PROJECT_NAME})
endif()
